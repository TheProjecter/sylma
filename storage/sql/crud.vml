<?xml version="1.0" encoding="utf-8"?>
<crud:crud
  xmlns:crud="http://2013.sylma.org/view/crud"
  xmlns:view="http://2013.sylma.org/view"
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:tpl="http://2013.sylma.org/template"
  xmlns:sql="http://2013.sylma.org/storage/sql"
  xmlns:js="http://2013.sylma.org/template/binder"
  xmlns:le="http://2013.sylma.org/action"
  xmlns:ls="http://2013.sylma.org/parser/security"
>

  <crud:route groups="list">

    <view:view mode="view" _debug="x">

      <sql:resource multiple="multiple"/>

      <view:template>
        <div>
          <a>
            <tpl:token name="href">
              <le:path/>/insert
            </tpl:token>
            Insert
          </a>
          <a ls:owner="root" ls:group="admin" ls:mode="700">
            <tpl:token name="href">
              <le:path>/sylma/storage/sql/alter</le:path>?path=<view:get-schema/>
            </tpl:token>
            Structure
          </a>
          <table js:class="sylma.ui.Base">
            <tpl:apply select="static()" mode="row"/>
            <crud:include path="list"/>
          </table>
        </div>
      </view:template>

      <view:template match="*" mode="row">
        <thead>
          <tr>
            <th></th>
            <tpl:apply use="list-cols" mode="cell"/>
          </tr>
        </thead>
      </view:template>

      <view:template match="*" mode="cell">
        <th>
          <a href="#" js:class="sylma.ui.Base">
            <js:option name="name"><tpl:apply select="alias()"/></js:option>
            <js:event name="click">
              %parent%.getObject('container').update({order : %object%.get('name')});
              return false;
            </js:event>
            <tpl:apply select="alias()"/>
          </a>
        </th>
      </view:template>

    </view:view>

    <view:view name="list" _debug="x">

      <sql:resource multiple="multiple"/>

      <le:check-argument name="page" format="integer">
        <le:default>1</le:default>
      </le:check-argument>

      <view:template mode="init">

        <sql:pager>
          <sql:current>
            <le:argument name="page"/>
          </sql:current>
          <sql:count>10</sql:count>
        </sql:pager>

        <le:check-argument name="order" format="string">
          <le:default>
            <tpl:apply select="$$list-order"/>
          </le:default>
        </le:check-argument>

        <sql:order>
          <le:argument name="order"/>
        </sql:order>

      </view:template>

      <view:template>
        <tpl:apply mode="init"/>
        <tbody js:name="container" js:class="sylma.ui.Container">
          <js:option name="path">
            <crud:path/>
          </js:option>
          <tpl:apply select="*" mode="row"/>
          <tr>
            <td colspan="99">
              <tpl:apply select="pager()"/>
            </td>
          </tr>
        </tbody>
      </view:template>

      <view:template match="*" mode="row">
        <tr js:class="sylma.ui.Base">
          <td>
            <a title="Editer">
              <tpl:token name="href">
                <le:path/>/update?id=<tpl:read select="id"/>
              </tpl:token>
              E
            </a>
          </td>
          <tpl:apply use="list-cols" mode="cell"/>
        </tr>
      </view:template>

      <view:template match="*" mode="cell">
        <td>
          <tpl:apply/>
        </td>
      </view:template>

      <view:template match="sql:pager">

        <div class="pager" js:class="sylma.ui.Base">

          <tpl:if test="!is-multiple()">
            <tpl:token name="class">form-disable</tpl:token>
          </tpl:if>

          <div class="clearfix">

            <a href="#" title="Page précédente" class="button pager-previous">
              <tpl:if test="is-first()">
                <tpl:token name="class">form-disable</tpl:token>
              </tpl:if>
              <js:option name="prev">
                <tpl:apply select="previous"/>
              </js:option>
              <js:event name="click">
                %parent%.update({page : %object%.get('prev')});
                return false;
              </js:event>
              &lt;&lt;
            </a>

            <span class="button pager-infos">

              <a href="#" title="Première page" class="pager-current">
                <tpl:if test="is-first()">
                  <tpl:token name="class">form-disable</tpl:token>
                </tpl:if>
                <js:event name="click">
                  %parent%.update({page : 1});
                  return false;
                </js:event>
                <tpl:read select="current"/>
              </a>

              <span class="pager-separator">/</span>

              <a href="#" title="Dernière page" class="pager-total">
                <tpl:if test="is-last()">
                  <tpl:token name="class">form-disable</tpl:token>
                </tpl:if>
                <js:option name="last">
                  <tpl:apply select="last"/>
                </js:option>
                <js:event name="click">
                  %parent%.update({page : %object%.get('last')});
                  return false;
                </js:event>
                <tpl:read select="last"/>
              </a>

            </span>

            <a href="#" title="Page suivante" class="button pager-next">
              <tpl:if test="is-last()">
                <tpl:token name="class">form-disable</tpl:token>
              </tpl:if>
              <js:option name="next">
                <tpl:apply select="next"/>
              </js:option>
              <js:event name="click">
                %parent%.update({page : %object%.get('next')});
                return false;
              </js:event>
              &gt;&gt;
            </a>
          </div>
        </div>

      </view:template>

    </view:view>

  </crud:route>

  <crud:route name="insert" groups="form">

    <view:view mode="hollow">

      <view:template mode="root">
        <tpl:token name="action"><le:path/>/insert/do.json</tpl:token>
      </view:template>

      <view:template match="*" mode="select">
        <option value="{id}">
          <tpl:apply mode="option"/>
        </option>
      </view:template>

    </view:view>

    <view:view name="do" mode="insert"/>

  </crud:route>

  <crud:route name="update" groups="form">

    <view:view mode="view" _debug="x">

      <view:template mode="root">
        <tpl:token name="action"><le:path/>/update/do.json</tpl:token>
        <sql:filter name="id"><le:argument name="id"/></sql:filter>
        <js:option name="id"><tpl:read select="id"/></js:option>
        <input type="hidden" name="{id/alias()}" value="{id/value()}"/>
      </view:template>

      <view:template match="*" mode="select">
        <option value="{id}">
          <tpl:if test="parent()/value() = id">
            <tpl:token name="selected">selected</tpl:token>
          </tpl:if>
          <tpl:apply mode="option"/>
        </option>
      </view:template>

    </view:view>

    <view:view name="do" mode="update">
      <sql:filter name="id" single="single"><le:argument name="id" source="post"/></sql:filter>
    </view:view>

  </crud:route>
  <!--<view:view mode="delete"/>-->

  <crud:global>

    <tpl:constant name="form-cols">* ^ id,date-update,date-insert</tpl:constant>
    <tpl:constant name="list-cols">*</tpl:constant>
    <tpl:constant name="list-order">id</tpl:constant>

  </crud:global>

  <crud:group name="form">

    <sql:resource/>

    <view:template>
      <form js:class="sylma.ui.Form">
        <js:include>/#sylma/template/form.js</js:include>
        <tpl:apply mode="root"/>
        <tpl:apply use="form-cols" mode="container"/>
        <input type="submit" value="Envoyer"/>
      </form>
    </view:template>

    <view:template match="*" mode="container">
      <tpl:register/>
      <div class="field clearfix">
        <label for="form-{alias()}"><tpl:apply select="alias()"/> :</label>
        <tpl:apply mode="input"/>
      </div>
    </view:template>

    <view:template match="*" mode="input">
      <input class="field-input field-input-element" type="text" id="form-{alias()}" value="{value()}" name="{alias()}">
        <tpl:token name="class">field-test</tpl:token>
      </input>
    </view:template>

    <view:template match="sql:string-long" mode="input">
      <textarea id="form-{alias()}" name="{alias()}" class="field-input field-input-element">
        <tpl:apply/>
      </textarea>
    </view:template>

    <view:template match="sql:foreign" mode="input">
      <select id="form-{alias()}" name="{alias()}">
        <option value="0">&lt; Choisissez &gt;</option>
        <tpl:apply select="all()" mode="select"/>
      </select>
    </view:template>

  </crud:group>

  <crud:group name="list">

    <view:template match="sql:foreign">
      <tpl:apply select="ref()"/>
    </view:template>

  </crud:group>

</crud:crud>
